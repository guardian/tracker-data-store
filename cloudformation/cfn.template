{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lambda functions to populate the Tracker Store",
  "Parameters": {
    "VpcId": {
        "Description": "ID of the VPC onto which to launch the application eg. vpc-1234abcd",
        "Type": "AWS::EC2::VPC::Id",
        "Default": "vpc-381fa95d"
    }
  },
  "Resources": {
    "TrackerDataStoreRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "lambda.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
            } ]
          },
          "Path": "/",
          "Policies": [ {
            "PolicyName": "TrackerDataStorePolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:CreateNetworkInterface",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DeleteNetworkInterface"
                  ],
                  "Resource": "*"
                },
                {
                  "Resource": [
                    "arn:aws:kinesis:*:*:stream/flexible-content-stream-live-*"
                  ],
                  "Action": [
                    "kinesis:Get*",
                    "kinesis:DescribeStream",
                    "kinesis:ListStreams"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Effect": "Allow",
                  "Action": [ "dynamodb:*" ],
                  "Resource": "*"
                }
              ]
            }
            } ]
          }
        },
        "TrackerDataLambdaSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription": "Lambda functions execute with this group",
                "VpcId": {"Ref": "VpcId"}
            }
        },
        "TrackerDataStoreAddDataLambdas": {
          "Type" : "AWS::Lambda::Function",
          "Properties" : {
            "Code" : {
              "S3Bucket" : "lambda-dist-cross-stream",
              "S3Key" : { "Fn::Join": [ "/", [ "composer-tracker-store", "composerTrackerStoreAdd.zip" ] ]}
            },
            "Description" : "A lambda function to listen to publish events and save to DynamoDB",
            "Handler" : "index.handler",
            "MemorySize" : 128,
            "Role" : { "Fn::GetAtt" : [ "TrackerDataStoreRole", "Arn" ] },
            "Runtime" : "nodejs4.3",
            "Timeout" : 120
          }
        },
        "TrackerDataStoreUpdateSnapshots": {
          "Type" : "AWS::Lambda::Function",
          "Properties" : {
            "Code" : {
              "S3Bucket" : "lambda-dist-cross-stream",
              "S3Key" : { "Fn::Join": [ "/", [ "composer-tracker-store", "composerTrackerUpdateSnapshots.zip" ] ]}
            },
            "Description" : "A lambda function to periodically check for new snapshots",
            "Handler" : "index.handler",
            "MemorySize" : 128,
            "Role" : { "Fn::GetAtt" : [ "TrackerDataStoreRole", "Arn" ] },
            "Runtime" : "nodejs4.3",
            "Timeout" : 120,
            "VpcConfig": {
              "SecurityGroupIds" : [  {"Ref": "TrackerDataLambdaSecurityGroup"}],
              "SubnetIds" : [
                "subnet-c2620fa7",
                "subnet-2a37bd5d",
                "subnet-2967c870"
              ]
            }
          }
        }
      }
    }
